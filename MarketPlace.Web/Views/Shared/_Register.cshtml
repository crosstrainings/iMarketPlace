@using MarketPlace.ViewModels
@model Person

<style>
    input.form-control {
        padding: 20px;
    }
</style>
<div class="modal fade" id="register-modal">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title text-center">
                    <strong class="text-muted">Join iMarketplace</strong>
                </h4>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm("Register", "User", FormMethod.Post))
                {
                    <div class="row">
                        <div class="col-lg-6">
                            @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", placeholder = "First Name" })
                            @Html.ValidationMessageFor(x => x.FirstName, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-6">
                            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", placeholder = "Last Name" })
                            @Html.ValidationMessageFor(x => x.LastName, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-12">
                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", type = "email", placeholder = "Email" })
                            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })

                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-12">
                            @Html.TextBoxFor(x => x.Password, new { @class = "form-control", type = "password", placeholder = "Password" })
                            @Html.ValidationMessageFor(x => x.Password, null, new { @class = "text-danger" })

                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-12">
                            @Html.TextBoxFor(x => x.ConfirmPassword, new { @class = "form-control", type = "password", placeholder = "Confirm Password" })
                            @Html.ValidationMessageFor(x => x.ConfirmPassword, null, new { @class = "text-danger" })

                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-6">
                            <select class="form-control registration-form-select country-list" id="CountryId" name="CountryId">
                                <option disabled="disabled" selected="selected">Country</option>
                                <option value="1">Pakistan</option>
                                <option value="2">Iran</option>
                                <option value="3">China</option>
                            </select>
                            @Html.ValidationMessageFor(x => x.CountryId)

                        </div>
                        <div class="col-lg-6">
                            <div class="city-list">
                                <select class="form-control registration-form-select" name="CityId" id="CityId">
                                    <option disabled="disabled" selected="selected">City</option>
                                </select>
                            </div>
                            @Html.ValidationMessageFor(x => x.CityId)
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-12">
                            <label class="text-muted">@Html.RadioButtonFor(x => x.IsSeller, true, new { @checked = "checked" }) <span>Seller</span></label>
                            <label class="text-muted">@Html.RadioButtonFor(x => x.IsSeller, false)<span>Buyer</span></label>
                        </div>
                    </div>
                    <button class="btn form-control" style="color:white;background: #db2e2e;font-weight: bold">Join</button>
                    <span style="font-size: 10px;color: #b3afaf">By joining I agree to receive emails from Market Place.</span>
                }
            </div>
            <div class="modal-footer">
                <div class="row text-center" style="color: #b3afaf">
                    Already a member? <a href="#" data-toggle="modal" data-target="#login-modal" data-dismiss="modal">Sign In</a>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-2.2.3.min.js"></script>

<script>
    //AJAX (Asynchronise JavaScript and XML)
    //Use
    //JavaScript
    //var ajaxObj = new XMLHttpRequest();
    //jQuery
    //jQuery.ajax({
    //});
    //React / Angular
    //RxJS
    $(function () {
        $(".country-list").change(function () {
            var countryId = $(this).select("option:selected").val();
            $.ajax({
                url: `/Location/GetCitiesByCountryId?countryId=${countryId}`,
                method: 'get'
            }).done(function (tagWithData) {
                $('.city-list').html(tagWithData)
                //if (cityList.length > 0) {
                //    var tag = '<option disabled="disabled" selected="selected">City</option>'
                //    for (var i = 0; i < cityList.length; i++) {
                //        var city = cityList[i];
                //        tag += `<option value="${city.Id}">${city.Name}</option>`
                //        $('.city-list').html(tag);
                //    }
                //}
                //Display Cities

            }).fail(function () {
                //On Error
            });
        });
    });
</script>
